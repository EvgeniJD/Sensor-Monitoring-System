Setup and run the app:

	1. Go to dir '\nodeJS-monitoring-system', open cmd or VSCode and run command 'npm i'. After installing node_modules
 run command 'npm start' to start the server listening on 'http://localhost:5000/'. Database should be ready too and should be filled with three sensors - 
 'sensor_1', 'sensor_2', 'sensor_3' with data in each sensor;

	2. Go to dir '\sensors\sensor_1\dist' and click on 'sensor_1.html' file to initialize the first sensor.
 Do the same with 'sensor_2' and 'sensor_3'. The sensors will be waiting to be turned on by the front-end app. Do not run sensor_4 for now ! ;

	3.Go to dir '\reactjs-monitoring-system', run command 'npm i'. After node packages are installed run command 'npm start' and 
 your browzer should be run the app on 'http://localhost:3000/'. You should be see a table with all sensors and a form to add sensor.
    To open a sensor details view, click on sensor table row and it should be displayed. 
    To start sensor click on 'Enable Sensor' button. After 5 seconds sensor should be started,
 server should be sign data from the sensor in the database, and front-end react app should be displayed live data in graph for a last minute,
 and in small windows - actual temperature and humidity. The button changes to 'Disable Sensor'.
    If you want to stop sensor, click that button. The sensor stops emitting data to server. Each time the details page is opened, the '24 hours graph' 
 data is refreshed. 
    If you want to start the fourth sensor, first you must enter it in the database. Write 'sensor_4' in the form and click the 'ADD' button or
 press enter. The new sensor should be in the database and react app should be displayed it in the table. After this, go to '\sensors\sensor_4\dist' and click
 on 'sensor_4.html' file to initialize the sensor. Now you can start and stop emitting from sensor.